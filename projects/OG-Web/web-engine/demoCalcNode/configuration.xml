<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
      
  <!-- Property file configuration -->
  <bean id="demoCalcNodeProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="true" />
    <property name="locations">
      <list>
        <value>${opengamma.engine.calcnode.baseurl}configuration.properties</value>
      </list>
    </property>
  </bean>

  <!-- A global Fudge context configured with all of the relevant builders --> 
  <bean id="fudgeContext" class="com.opengamma.util.fudgemsg.OpenGammaFudgeContext" factory-method="getInstance" />
  
  <!-- Global EH Cache Manager -->
  <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    <property name="shared" value="true"/>
  </bean>

  <!-- Source of slave threads -->  
  <bean id="slaveThreads" class="com.opengamma.util.ExecutorServiceFactoryBean">
    <property name="styleName" value="CACHED" />
  </bean>
  
  <!-- Historical data source -->
  <bean id="historicalTimeSeriesSource" class="com.opengamma.core.historicaltimeseries.impl.EHCachingHistoricalTimeSeriesSource">
    <constructor-arg>
      <bean class="com.opengamma.financial.historicaltimeseries.rest.RemoteHistoricalTimeSeriesSource">
        <constructor-arg ref="fudgeContext" />
        <constructor-arg>
          <bean class="com.opengamma.transport.jaxrs.RestTarget">
            <constructor-arg ref="slaveThreads" />
            <constructor-arg ref="fudgeContext" />
            <constructor-arg>
              <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
                <property name="uri" value="${opengamma.engine.configuration.url}/historicalTimeSeriesSource" />
              </bean>
            </constructor-arg>
          </bean>
        </constructor-arg>
      </bean>
    </constructor-arg>
    <constructor-arg ref="cacheManager" />
  </bean>
  
  <!-- Security Source -->
  <bean id="securitySource" class="com.opengamma.financial.security.EHCachingFinancialSecuritySource">
    <constructor-arg>
      <bean class="com.opengamma.financial.security.rest.RemoteFinancialSecuritySource">
        <constructor-arg ref="fudgeContext" />
        <constructor-arg>
          <bean class="com.opengamma.transport.jaxrs.RestTarget">
            <constructor-arg ref="slaveThreads" />
            <constructor-arg ref="fudgeContext" />
            <constructor-arg>
              <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
                <property name="uri" value="${opengamma.engine.configuration.url}/securitySource" />
              </bean>
            </constructor-arg>
          </bean>
        </constructor-arg>
      </bean>
    </constructor-arg>
    <constructor-arg ref="cacheManager" />
  </bean>
  
  <!-- Position Source -->
  <bean id="positionSource" class="com.opengamma.core.position.impl.EHCachingPositionSource">
    <constructor-arg>
      <bean class="com.opengamma.engine.position.rest.RemotePositionSource">
        <constructor-arg ref="fudgeContext" />
        <constructor-arg>
          <bean class="com.opengamma.transport.jaxrs.RestTarget">
            <constructor-arg ref="slaveThreads" />
            <constructor-arg ref="fudgeContext" />
            <constructor-arg>
              <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
                <property name="uri" value="${opengamma.engine.configuration.url}/positionSource" />
              </bean>
            </constructor-arg>
          </bean>
        </constructor-arg>
      </bean>
    </constructor-arg>
    <constructor-arg ref="cacheManager" />
  </bean>
  
  <!-- Region source -->
  <bean id="regionSource" class="com.opengamma.master.region.impl.EHCachingRegionSource">
    <constructor-arg>
      <bean class="com.opengamma.financial.region.rest.RemoteRegionSource">
        <constructor-arg ref="fudgeContext" />
        <constructor-arg>
          <bean class="com.opengamma.transport.jaxrs.RestTarget">
            <constructor-arg ref="slaveThreads" />
            <constructor-arg ref="fudgeContext" />
            <constructor-arg>
              <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
                <property name="uri" value="${opengamma.engine.configuration.url}/regionSource" />
              </bean>
            </constructor-arg>
          </bean>
        </constructor-arg>
      </bean>
    </constructor-arg>
    <constructor-arg ref="cacheManager" />
  </bean>
  
  <!-- Conventions -->
  <!-- TODO [PLAT-637] -->
  <bean id="conventionBundleSource" class="com.opengamma.financial.convention.DefaultConventionBundleSource">
    <constructor-arg>
      <bean class="com.opengamma.financial.convention.InMemoryConventionBundleMaster"/>
    </constructor-arg>
  </bean>
  
  <!-- Config Source -->
  <!-- TODO [PLAT-432] -->
  <bean id="configSource" class="com.opengamma.master.config.impl.MasterConfigSource">
    <constructor-arg>
      <bean class="com.opengamma.masterdb.config.DbConfigMaster">
        <constructor-arg>
          <bean class="com.opengamma.util.db.DbConnectorFactoryBean">
            <property name="transactionIsolationLevelName" value="ISOLATION_READ_COMMITTED" />
            <property name="transactionPropagationBehaviorName" value="PROPAGATION_REQUIRED" />
            <property name="name" value="Config"/>
            <property name="dataSource">
              <bean id="cfgDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
                <property name="driverClassName">
                  <bean class="com.opengamma.transport.jaxrs.RemoteStringFactoryBean">
                    <property name="uri" value="${opengamma.engine.configuration.dvi135}/opengamma.config.jdbc.driver" />
                  </bean>
                </property>
                <property name="url">
                  <bean class="com.opengamma.transport.jaxrs.RemoteStringFactoryBean">
                    <property name="uri" value="${opengamma.engine.configuration.dvi135}/opengamma.config.jdbc.url" />
                  </bean>
                </property>
                <property name="username">
                  <bean class="com.opengamma.transport.jaxrs.RemoteStringFactoryBean">
                    <property name="uri" value="${opengamma.engine.configuration.dvi135}/opengamma.config.jdbc.username" />
                  </bean>
                </property>
                <property name="password">
                  <bean class="com.opengamma.transport.jaxrs.RemoteStringFactoryBean">
                    <property name="uri" value="${opengamma.engine.configuration.dvi135}/opengamma.config.jdbc.password" />
                  </bean>
                </property>
              </bean>
            </property>
            <property name="dialectName">
              <bean class="com.opengamma.transport.jaxrs.RemoteStringFactoryBean">
                <property name="uri" value="${opengamma.engine.configuration.dvi135}/opengamma.config.db.dbdialect"/>
              </bean>
            </property>
          </bean>
        </constructor-arg>  
        <property name="uniqueIdScheme">
          <bean class="com.opengamma.transport.jaxrs.RemoteStringFactoryBean">
            <property name="uri" value="${opengamma.engine.configuration.dvi135}/opengamma.config.db.configmaster.scheme" />
          </bean>
        </property>
      </bean>
    </constructor-arg>
  </bean>
  
  <!-- Exchange Source -->
  <bean id="exchangeSource" class="com.opengamma.master.exchange.impl.EHCachingExchangeSource">
    <constructor-arg>
      <bean class="com.opengamma.financial.exchange.rest.RemoteExchangeSource">
        <constructor-arg ref="fudgeContext" />
        <constructor-arg>
          <bean class="com.opengamma.transport.jaxrs.RestTarget">
            <constructor-arg ref="slaveThreads" />
            <constructor-arg ref="fudgeContext" />
            <constructor-arg>
              <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
                <property name="uri" value="${opengamma.engine.configuration.url}/exchangeSource" />
              </bean>
            </constructor-arg>
          </bean>
        </constructor-arg>
      </bean>
    </constructor-arg>
    <constructor-arg ref="cacheManager" />
  </bean>
  
  <!-- Holiday Source -->
  <bean id="holidaySource" class="com.opengamma.financial.holiday.rest.RemoteHolidaySource">
    <constructor-arg ref="fudgeContext" />
    <constructor-arg>
      <bean class="com.opengamma.transport.jaxrs.RestTarget">
        <constructor-arg ref="slaveThreads" />
        <constructor-arg ref="fudgeContext" />
        <constructor-arg>
          <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
            <property name="uri" value="${opengamma.engine.configuration.url}/holidaySource" />
          </bean>
        </constructor-arg>
      </bean>
    </constructor-arg>
  </bean>
  
  <!-- Currency conversions -->
  <bean id="currencyMatrixSource" class="com.opengamma.financial.currency.rest.RemoteCurrencyMatrixSource">
    <constructor-arg ref="fudgeContext" />
    <constructor-arg>
      <bean class="com.opengamma.transport.jaxrs.RestTarget">
        <constructor-arg ref="slaveThreads" />
        <constructor-arg ref="fudgeContext" />
        <constructor-arg>
          <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
            <property name="uri" value="${opengamma.engine.configuration.url}/currencyMatrixSource" />
          </bean>
        </constructor-arg>
      </bean>
    </constructor-arg>
  </bean>

  <!-- Curves -->
  <bean id="interpolatedYieldCurveDefinitionSource" class="com.opengamma.financial.analytics.ircurve.rest.RemoteInterpolatedYieldCurveDefinitionSource">
    <constructor-arg ref="fudgeContext" />
    <constructor-arg>
      <bean class="com.opengamma.transport.jaxrs.RestTarget">
        <constructor-arg ref="slaveThreads" />
        <constructor-arg ref="fudgeContext" />
        <constructor-arg>
          <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
            <property name="uri" value="${opengamma.engine.configuration.url}/interpolatedYieldCurveDefinitionSource" />
          </bean>
        </constructor-arg>
      </bean>
    </constructor-arg>
  </bean>
  <bean id="interpolatedYieldCurveSpecificationBuilder" class="com.opengamma.financial.analytics.ircurve.rest.RemoteInterpolatedYieldCurveSpecificationBuilder">
    <constructor-arg ref="fudgeContext" />
    <constructor-arg>
      <bean class="com.opengamma.transport.jaxrs.RestTarget">
        <constructor-arg ref="slaveThreads" />
        <constructor-arg ref="fudgeContext" />
        <constructor-arg>
          <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
            <property name="uri" value="${opengamma.engine.configuration.url}/interpolatedYieldCurveSpecificationBuilder" />
          </bean>
        </constructor-arg>
      </bean>
    </constructor-arg>
  </bean>

  <!-- Volatility cubes -->
  
  <bean id="combinedVolatilityCubeDefinitionSource" class="com.opengamma.financial.analytics.volatility.cube.rest.RemoteVolatilityCubeDefinitionSource">
    <constructor-arg ref="fudgeContext" />
    <constructor-arg>
      <bean class="com.opengamma.transport.jaxrs.RestTarget">
        <constructor-arg ref="slaveThreads" />
        <constructor-arg ref="fudgeContext" />
        <constructor-arg>
          <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
            <property name="uri" value="${opengamma.engine.configuration.url}/volatilityCubeDefinitionSource" />
          </bean>
        </constructor-arg>
      </bean>
    </constructor-arg>
  </bean>
  
  <!-- View Computation Cache -->
  <bean id="sharedComputationCacheEndPoint" class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
    <property name="uri" value="${opengamma.engine.configuration.url}/remoteCalcNode/cacheServer" />
  </bean>
  <bean id="computationCache" class="com.opengamma.engine.view.cache.RemoteViewComputationCacheSource">
    <constructor-arg>
      <bean class="com.opengamma.engine.view.cache.RemoteCacheClient">
        <constructor-arg>
          <bean class="com.opengamma.transport.FudgeConnectionFactoryBean">
            <property name="fudgeContext" ref="fudgeContext" />
            <property name="executorService" ref="slaveThreads" />
            <property name="endPointDescription" ref="sharedComputationCacheEndPoint" />
          </bean>
        </constructor-arg>
        <constructor-arg>
          <bean class="com.opengamma.transport.FudgeConnectionFactoryBean">
            <property name="fudgeContext" ref="fudgeContext" />
            <property name="executorService" ref="slaveThreads" />
            <property name="endPointDescription" ref="sharedComputationCacheEndPoint" />
          </bean>
        </constructor-arg>
      </bean>
    </constructor-arg>
    <constructor-arg>
      <bean class="com.opengamma.engine.view.cache.DefaultFudgeMessageStoreFactory">
        <constructor-arg>
          <bean class="com.opengamma.engine.view.cache.BerkeleyDBBinaryDataStoreFactoryFactoryBean">
            <property name="dataStoreFolder" value="${opengamma.engine.calcnode.localdatastore}" />
          </bean>
        </constructor-arg>
        <constructor-arg ref="fudgeContext" />
      </bean>
    </constructor-arg>
    <constructor-arg ref="cacheManager" />
  </bean>

  <!-- Target resolver -->
  <bean id="targetResolver" class="com.opengamma.engine.DefaultComputationTargetResolver">
    <constructor-arg ref="positionSource" />
    <constructor-arg ref="securitySource" />
  </bean>
  
  <!-- View processor query -->
  <bean id="viewProcessorQuery" class="com.opengamma.engine.view.calcnode.ViewProcessorQuerySender">
    <constructor-arg>
      <bean class="com.opengamma.transport.FudgeRequestSenderFactoryBean">
        <property name="fudgeContext" ref="fudgeContext" />
        <property name="endPointDescription">
          <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
            <property name="uri" value="${opengamma.engine.configuration.url}/remoteCalcNode/queryServer" />
          </bean>
        </property>
      </bean>
    </constructor-arg>
  </bean>
  
  <!-- Execution statistics -->
  <bean id="statisticsSender" class="com.opengamma.engine.view.calcnode.stats.FunctionInvocationStatisticsSender">
    <property name="serverScalingHint" value="${opengamma.engine.calcnode.scalinghint}" />
  </bean>
  
  <!-- Functions -->
  <bean id="functionCompilationContext" class="com.opengamma.financial.OpenGammaCompilationContextFactoryBean">
    <property name="configSource" ref="configSource" />
    <property name="conventionBundleSource" ref="conventionBundleSource"/>
    <property name="currencyMatrixSource" ref="currencyMatrixSource" />
    <property name="exchangeSource" ref="exchangeSource" />
    <property name="holidaySource" ref="holidaySource" />
    <property name="interpolatedYieldCurveDefinitionSource" ref="interpolatedYieldCurveDefinitionSource" />
    <property name="interpolatedYieldCurveSpecificationBuilder" ref="interpolatedYieldCurveSpecificationBuilder" />
    <property name="volatilityCubeDefinitionSource" ref="combinedVolatilityCubeDefinitionSource" />
    <property name="positionSource" ref="positionSource" />
    <property name="regionSource" ref="regionSource"/>
    <property name="securitySource" ref="securitySource" />
  </bean>
  <bean id="functionExecutionContext" class="com.opengamma.financial.OpenGammaExecutionContextFactoryBean">
    <property name="configSource" ref="configSource" />
    <property name="conventionBundleSource" ref="conventionBundleSource"/>
    <property name="exchangeSource" ref="exchangeSource"/>
    <property name="historicalTimeSeriesSource" ref="historicalTimeSeriesSource" />
    <property name="holidaySource" ref="holidaySource"/>
    <property name="positionSource" ref="positionSource" />
    <property name="regionSource" ref="regionSource"/>
    <property name="securitySource" ref="securitySource" />
  </bean>
  <bean id="functionCompilation" class="com.opengamma.engine.function.CompiledFunctionService">
    <constructor-arg>
      <bean class="com.opengamma.engine.function.config.RepositoryFactoryBean">
        <property name="repositoryConfigurationSource">
          <bean class="com.opengamma.financial.function.rest.RemoteRepositoryConfigurationSource">
            <constructor-arg ref="fudgeContext" />
            <constructor-arg>
              <bean class="com.opengamma.transport.jaxrs.RestTarget">
                <constructor-arg ref="slaveThreads" />
                <constructor-arg ref="fudgeContext" />
                <constructor-arg>
                  <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
                    <property name="uri" value="${opengamma.engine.configuration.url}/functionRepositoryConfiguration" />
                  </bean>
                </constructor-arg>
              </bean>
            </constructor-arg>
          </bean>
        </property>
      </bean>
    </constructor-arg>
    <constructor-arg>
      <bean class="com.opengamma.engine.function.CachingFunctionRepositoryCompiler" />
      <!-- <bean class="com.opengamma.engine.function.LazyFunctionRepositoryCompiler" /> -->
    </constructor-arg>
    <constructor-arg ref="functionCompilationContext" />
  </bean>
  
  <!-- Calculation node(s) -->
  <bean id="calcNodes" class="com.opengamma.engine.view.calcnode.LocalCalculationNodeSet">
    <property name="viewComputationCache" ref="computationCache" />
    <property name="functionCompilationService" ref="functionCompilation" />
    <property name="functionExecutionContext" ref="functionExecutionContext" />
    <property name="computationTargetResolver" ref="targetResolver" />
    <property name="viewProcessorQuery" ref="viewProcessorQuery" />
    <property name="writeBehindExecutorService" ref="slaveThreads" />
    <property name="statisticsGatherer" ref="statisticsSender" />
    <property name="nodesPerCore" value="${opengamma.engine.calcnode.nodespercore}" />
  </bean>
  
  <!-- Job invoker -->
  <bean id="jobInvoker" class="com.opengamma.engine.view.calcnode.RemoteNodeClient">
    <constructor-arg>
      <bean class="com.opengamma.transport.FudgeConnectionFactoryBean">
        <property name="fudgeContext" ref="fudgeContext" />
        <!-- Don't use slaveThreads - we need to preserve network message ordering -->
        <property name="endPointDescription">
          <bean class="com.opengamma.transport.jaxrs.RemoteEndPointDescriptionProvider">
            <property name="uri" value="${opengamma.engine.configuration.url}/remoteCalcNode/jobServer" />
          </bean>
        </property>
      </bean>
    </constructor-arg>
    <constructor-arg ref="functionCompilation" />
    <constructor-arg>
      <bean factory-bean="computationCache" factory-method="getIdentifierMap" />
    </constructor-arg>
    <constructor-arg ref="statisticsSender" />
    <constructor-arg ref="calcNodes" />
  </bean>

</beans>