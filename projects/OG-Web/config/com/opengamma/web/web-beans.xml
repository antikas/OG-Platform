<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd">
    

  <!--  import resources from OG-Util -->
  <import resource="classpath:com/opengamma/transport/jaxrs/beans.xml" />

  <!-- Property file configuration -->
  <bean id="beansProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="true" />
    <property name="locations">
      <list>
        <value>classpath:com/opengamma/web/engine-spring.properties</value>
      </list>
    </property>
  </bean>
  
  <!-- Bundle Property file configuration -->
  <bean id="bundleProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="true" />
    <property name="location" value="classpath:com/opengamma/web/bundle.properties"/>
  </bean>

  <!-- Historical data source service -->
  <bean id="historicalTimeSeriesSourceRestBean" class="com.opengamma.financial.historicaltimeseries.rest.HistoricalTimeSeriesSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="sharedHistoricalTimeSeriesSource" />
  </bean>
  <bean id="historicalTimeSeriesMasterRestBean" class="com.opengamma.financial.historicaltimeseries.rest.HistoricalTimeSeriesMasterService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="dbHtsMaster" />
  </bean>

  <!-- View processor service -->
  <bean id="viewProcessorRestBean" class="com.opengamma.financial.view.rest.RestViewProcessorFactoryBean">
    <property name="viewProcessor" ref="demoViewProcessor" />
    <property name="jmsConnector" ref="jmsConnector" />
    <property name="fudgeContext" ref="fudgeContext" />
    <property name="executorService" ref="scheduler" />
  </bean>
  <bean id="availableOutputsRestBean" class="com.opengamma.financial.view.rest.AvailableOutputsService">
    <constructor-arg ref="demoAvailableOutputsProvider" />
    <constructor-arg ref="fudgeContext" />
  </bean>
  <bean id="dependencyGraphDebugRestBean" class="com.opengamma.financial.depgraph.rest.DependencyGraphBuilderService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying">
      <bean class="com.opengamma.financial.depgraph.rest.DependencyGraphBuilderResourceContextBean">
        <property name="compiledFunctionService" ref="demoFunctionCompilation" />
        <property name="marketDataProviderResolver" ref="marketDataProviderResolver" />
        <property name="computationTargetResolver" ref="demoTargetResolver" />
        <property name="functionResolver" ref="demoFunctionResolver" />
      </bean>
    </property>
  </bean>

  <!-- Snapshotter service -->
  <bean id="snapshotterRest" class="com.opengamma.financial.marketdatasnapshot.rest.MarketDataSnapshottersResource">
    <constructor-arg name="processors" ref="viewProcessorRestBean" />
    <constructor-arg name="volatilityCubeDefinitionSource" ref="combinedVolatilityCubeDefinitionSource" />
  </bean>
  
  <!-- Security source/master service -->
  <bean id="testSecurityMaster" class="com.opengamma.master.security.impl.InMemorySecurityMaster" />
  <bean id="securitySourceRestBean" class="com.opengamma.financial.security.rest.SecuritySourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlyingMap">
      <map>
        <entry key="0" value-ref="combinedSecuritySource" />
        <entry key="shared" value-ref="sharedSecuritySource" />
        <entry key="user" value-ref="userFinancialSecuritySource" />
        <entry key="test">
          <bean class="com.opengamma.financial.security.MasterFinancialSecuritySource">
            <constructor-arg ref="testSecurityMaster" />
          </bean>
        </entry>
      </map>
    </property>
  </bean>
  <bean id="securityMasterRestBean" class="com.opengamma.financial.security.rest.SecurityMasterService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlyingMap">
      <map>
        <entry key="0" value-ref="dbSecurityMaster" />
        <entry key="test" value-ref="testSecurityMaster" />
      </map>
    </property>
  </bean>
  
  <!-- Function repository configuration -->
  <bean id="functionRepositoryConfigurationRestBean" class="com.opengamma.financial.function.rest.RepositoryConfigurationSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="demoFunctionRepositoryConfiguration" />
  </bean>
  <bean id="functionRepositoryRestBean" class="com.opengamma.financial.function.rest.FunctionRepositoryService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying">
      <bean factory-bean="demoFunctionCompilation" factory-method="getFunctionRepository" />
    </property>
  </bean>
  
  <!-- Position source -->
  <bean id="dataPositionSourceRestBean" class="com.opengamma.engine.position.rest.DataPositionSourceResource">
    <constructor-arg ref="fudgeContext" />
    <constructor-arg ref="combinedPositionSource" />
  </bean>
  
  <!-- Currency conversions -->
  <bean id="currencyMatrixSourceRestBean" class="com.opengamma.financial.currency.rest.CurrencyMatrixSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="sharedCurrencyMatrixSource" />
  </bean>
  
  <bean id="currencyPairsSourceRestBean" class="com.opengamma.financial.currency.rest.CurrencyPairsSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="sharedCurrencyPairsSource" />
  </bean>

  <!-- Ad hoc batches -->
  <bean id="adHocBatchRestBean" class="com.opengamma.financial.batch.AdHocBatchDbManagerService">
    <constructor-arg ref="dbBatchMaster" />
    <constructor-arg ref="fudgeContext" />
  </bean>
  
  <!-- Curves service -->
  <bean id="testInterpolatedYieldCurveDefinitions" class="com.opengamma.financial.analytics.ircurve.InMemoryInterpolatedYieldCurveDefinitionMaster">
    <property name="uniqueIdScheme" value="TestCurves" />
  </bean>
  <bean id="interpolatedYieldCurveDefinitionSourceRestBean" class="com.opengamma.financial.analytics.ircurve.rest.InterpolatedYieldCurveDefinitionSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlyingMap">
      <map>
        <entry key="0" value-ref="combinedInterpolatedYieldCurveDefinitionSource" />
        <entry key="shared" value-ref="sharedInterpolatedYieldCurveDefinitionSource" />
        <entry key="user" value-ref="userInterpolatedYieldCurveDefinitions" />
        <entry key="test" value-ref="testInterpolatedYieldCurveDefinitions" />
      </map>
    </property>
  </bean>
  <bean id="interpolatedYieldCurveDefinitionMasterRestBean" class="com.opengamma.financial.analytics.ircurve.rest.InterpolatedYieldCurveDefinitionMasterService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlyingMap">
      <map>
        <entry key="user" value-ref="userInterpolatedYieldCurveDefinitions" />
        <entry key="test" value-ref="testInterpolatedYieldCurveDefinitions" />
      </map>
    </property>
  </bean>
  <bean id="interpolatedYieldCurveSpecificationBuilderRestBean" class="com.opengamma.financial.analytics.ircurve.rest.InterpolatedYieldCurveSpecificationBuilderService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="sharedInterpolatedYieldCurveSpecificationBuilder" />
  </bean>
  
  <!-- Vol Cubes service -->
  <bean id="volatilityCubeDefinitionSourceRestBean" class="com.opengamma.financial.analytics.volatility.cube.rest.VolatilityCubeDefinitionSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="combinedVolatilityCubeDefinitionSource" />
  </bean>
  
  <!-- Users resource context -->
  <bean id="usersResourceContext" class="com.opengamma.financial.user.rest.UsersResourceContext">
    <property name="fudgeContext" ref="fudgeContext" />
    <property name="userPortfolioMaster" ref="userFinancialPortfolioMaster" />
    <property name="userPositionMaster" ref="userFinancialPositionMaster" />
    <property name="userSecurityMaster" ref="userFinancialSecurityMaster" />
    <property name="userViewDefinitionRepository" ref="userViewDefinitionRepository" />
    <property name="userInterpolatedYieldCurveDefinitionMaster" ref="userInterpolatedYieldCurveDefinitions" />
    <property name="userSnapshotMaster" ref="userFinancialSnapshotMaster" />
  </bean>
  
  <!-- Users Tracker -->
  <bean id="usersTracker" class="com.opengamma.financial.user.DefaultUsersTracker">
    <constructor-arg ref="usersResourceContext"/>
  </bean>

  <!-- User supplied data -->
  <bean id="usersRestBean" class="com.opengamma.financial.user.rest.UsersResource">
    <constructor-arg ref="usersTracker" />
    <constructor-arg ref="usersTracker" />
    <constructor-arg ref="usersResourceContext"/>
  </bean>
  
  <bean id="usersRestBeanCleaner" factory-bean="usersRestBean" factory-method="createDeleteTask">
    <property name="timeout" value="${opengamma.financial-user.timeout}" />
    <property name="scheduler" ref="scheduler" />
  </bean>

  <!-- Root RESTful service -->
  <bean id="webHomeRestBean" class="com.opengamma.web.WebHomeResource" scope="request">
  </bean>
  
  <!-- Securities RESTful service -->
  <bean id="webSecuritiesRestBean" class="com.opengamma.web.security.WebSecuritiesResource" scope="request">
    <constructor-arg ref="dbSecurityMaster" />
    <constructor-arg ref="securityLoader"/>
    <constructor-arg ref="dbHtsMaster"/>
    <constructor-arg ref="sharedConfigSource"/>
  </bean>
  
  <!-- Portfolios RESTful service -->
  <bean id="dataPortfoliosRestBean" class="com.opengamma.master.portfolio.impl.DataPortfoliosResource">
    <constructor-arg ref="dbPortfolioMaster" />
  </bean>
  <bean id="webPortfoliosRestBean" class="com.opengamma.web.portfolio.WebPortfoliosResource" scope="request">
    <constructor-arg ref="dbPortfolioMaster" />
    <constructor-arg ref="dbPositionMaster" />
  </bean>

  <!-- Positions RESTful service -->
  <bean id="dataPositionsRestBean" class="com.opengamma.master.position.impl.DataPositionsResource">
    <constructor-arg ref="dbPositionMaster" />
  </bean>
  <bean id="webPositionsRestBean" class="com.opengamma.web.position.WebPositionsResource" scope="request">
    <constructor-arg ref="dbPositionMaster" />
    <constructor-arg ref="securityLoader"/>
    <constructor-arg ref="sharedSecuritySource"/>
    <constructor-arg ref="dbHtsMaster"/>
    <constructor-arg ref="sharedConfigSource"/>
  </bean>
  
  <!-- Exchanges RESTful service -->
  <bean id="webExchangesRestBean" class="com.opengamma.web.exchange.WebExchangesResource" scope="request">
    <constructor-arg ref="dbExchangeMaster" />
  </bean>
  <bean id="dataExchangesRestBean" class="com.opengamma.financial.exchange.rest.ExchangeSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="sharedExchangeSource" />
  </bean>
  
  <!-- Holidays RESTful service -->
  <bean id="webHolidaysRestBean" class="com.opengamma.web.holiday.WebHolidaysResource" scope="request">
    <constructor-arg ref="dbHolidayMaster" />
  </bean>
  <bean id="dataHolidaysRestBean" class="com.opengamma.financial.holiday.rest.HolidaySourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="sharedHolidaySource" />
  </bean>
  
  <!-- Exchanges RESTful service -->
  <bean id="webRegionsRestBean" class="com.opengamma.web.region.WebRegionsResource" scope="request">
    <constructor-arg ref="regionMaster" />
  </bean>
  <bean id="dataRegionsRestBean" class="com.opengamma.financial.region.rest.RegionSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="regionSource" />
  </bean>
  
  <!-- Distributed component configuration data -->
  <bean id="configurationResource" class="com.opengamma.util.rest.ConfigurationResource">
    <constructor-arg ref="fudgeContext" />
    <constructor-arg>
      <map>
        <entry key="0">
          <map>
            <entry key="activeMQ" value="${activeMQ.brokerURL}" />
            <entry key="adHocBatchDbManager">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/adHocBatchDbManager/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="availableOutputs">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/availableOutputs/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="currencyMatrixSource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/currencyMatrixSource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="currencyPairsSource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/currencyPairsSource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="dependencyGraphBuilder">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/dependencyGraphBuilder/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="description" value="Default OpenGamma installation" />
            <entry key="exchangeSource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/exchangeSource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="functionRepositoryConfiguration">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/repositoryConfigurationSource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="historicalTimeSeriesMaster">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/historicalTimeSeriesMaster/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="historicalTimeSeriesSource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/historicalTimeSeriesSource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="holidaySource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/holidaySource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="interpolatedYieldCurveDefinitionSource"> 
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/interpolatedYieldCurveDefinitionSource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="interpolatedYieldCurveSpecificationBuilder">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/interpolatedYieldCurveSpecificationBuilder/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="marketDataSnapshotMaster">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/marketDataSnapshotMaster/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="marketDataSnapshotSource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/marketDataSnapshotSource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="marketDataSnapshotter">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/data/marketDataSnapshotters/Vp~0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
           <entry key="volatilityCubeDefinitionSource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/volatilityCubeDefinitionSource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="portfolioMaster">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/data/prtMaster/portfolios" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="positionMaster">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/data/posMaster/positions" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="positionSource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/positionSource/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="regionSource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/regionSource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="remoteCalcNode" value-ref="calcNodeSocketConfig" />
            <entry key="securityMaster">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/securityMaster/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="securitySource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/securitySource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="userData">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/data/users/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="viewProcessor">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/data/viewProcessors/Vp~0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
          </map>
        </entry>
        <!-- THESE ARE FOR CONVENIENT DEBUGGING ONLY; REMOVE WHEN JMX WORK IS DONE -->
         <!-- ENG-154 -->
        <entry key="jobDispatchStatistics" value-ref="jobDispatchStatistics" />
        <entry key="graphExecutionStatistics" value-ref="graphExecutionStatistics" />
        <!-- ENG-240 & ENG-248 -->
        <entry key="executorTuner" value-ref="graphExecutorTuner" />
        <!-- DVI-135; remove when there are remote implementations of all sources -->
        <entry key="DVI-135">
          <bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="location">
              <value>classpath:demoMasters-${opengamma.platform.runmode}.properties</value>
            </property>
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>
  
  <!-- ValueRequirementNames RESTful service -->
  <bean id="webValueRequirementNamesRestBean" class="com.opengamma.web.valuerequirementname.WebValueRequirementNamesResource" scope="request" />
    
  <!-- Config RESTful service -->
  <bean id="webConfigsRestBean" class="com.opengamma.web.config.WebConfigsResource" scope="request">
    <constructor-arg ref="sharedConfigMaster" />
  </bean>
  
  <!-- Time series RESTful service -->
  <bean id="webTimeSeriesRestBean" class="com.opengamma.web.historicaltimeseries.WebAllHistoricalTimeSeriesResource" scope="request">
    <constructor-arg ref="dbHtsMaster" />
    <constructor-arg ref="htsLoader"/>
  </bean>
  
  <!-- Batch RESTful service -->
  <bean id="webBatchesRestBean" class="com.opengamma.web.batch.WebBatchesResource" scope="request">
    <constructor-arg ref="dbBatchMaster" />
  </bean>
  
  <!-- Bundles RESTful service -->
  <bean id="bundleManager" class="com.opengamma.web.spring.BundleManagerFactoryBean">
    <property name="configResource" value="classpath:${bundle.file}" />
    <property name="baseDir" value="${bundle.basedir}" />
  </bean>
  
  <bean id="yuiCompressorOptions" class="com.opengamma.web.bundle.YUICompressorOptions">
    <property name="lineBreakPosition" value="${yuiCompressorOptions.lineBreakPosition}" />
    <property name="munge" value="${yuiCompressorOptions.munge}" />
    <property name="preserveAllSemiColons" value="${yuiCompressorOptions.preserveAllSemiColons}" />
    <property name="optimize" value="${yuiCompressorOptions.optimize}" />
    <property name="warn" value="${yuiCompressorOptions.warn}" />
  </bean>
  
  <bean id="bundleCompressor" class="com.opengamma.web.bundle.EHCachingBundleCompressor">
    <constructor-arg>
      <bean class="com.opengamma.web.bundle.YUIBundleCompressor">
        <constructor-arg ref="yuiCompressorOptions" />
      </bean>
    </constructor-arg>
    <constructor-arg ref="cacheManager" />
  </bean>
  
  <bean id="webBundlesRestBean" class="com.opengamma.web.bundle.WebBundlesResource" scope="request">
    <constructor-arg ref="bundleManager" />
    <constructor-arg ref="bundleCompressor" />
    <constructor-arg value="${bundle.mode}"/>
  </bean>

  <!-- Portfolio aggregators -->
  <bean id="portfolioAggregationFunctions" class="org.springframework.beans.factory.config.ListFactoryBean">
    <property name="sourceList">
      <list>
        <!-- TODO: shared aggregation function config -->
        <bean class="com.opengamma.financial.aggregation.AssetClassAggregationFunction">
          <constructor-arg value="false" />
        </bean>
        <bean class="com.opengamma.financial.aggregation.CurrencyAggregationFunction" />
        <bean class="com.opengamma.financial.aggregation.DetailedAssetClassAggregationFunction" />
        <bean class="com.opengamma.financial.aggregation.RegionAggregationFunction">
          <constructor-arg ref="combinedSecuritySource" />
          <constructor-arg ref="regionSource" />
          <constructor-arg ref="sharedExchangeSource" />
          <constructor-arg value="false" />
          <constructor-arg value="false" />
        </bean>
        <bean class="com.opengamma.financial.aggregation.UnderlyingAggregationFunction">
          <constructor-arg ref="combinedSecuritySource" />
          <constructor-arg value="BLOOMBERG_TICKER" />
          <constructor-arg value="false" />
        </bean>
        <bean class="com.opengamma.financial.aggregation.GICSAggregationFunction">
          <constructor-arg ref="combinedSecuritySource" />
          <constructor-arg value="SECTOR" />
          <constructor-arg value="false" />
          <constructor-arg value="false" />
        </bean>
        <bean class="com.opengamma.financial.aggregation.GICSAggregationFunction">
          <constructor-arg ref="combinedSecuritySource" />
          <constructor-arg value="INDUSTRY_GROUP" />
          <constructor-arg value="false" />
        </bean>
        <bean class="com.opengamma.financial.aggregation.GICSAggregationFunction">
          <constructor-arg ref="combinedSecuritySource" />
          <constructor-arg value="INDUSTRY" />
          <constructor-arg value="false" />
        </bean>
        <bean class="com.opengamma.financial.aggregation.GICSAggregationFunction">
          <constructor-arg ref="combinedSecuritySource" />
          <constructor-arg value="SUB_INDUSTRY" />
          <constructor-arg value="false" />
        </bean>
        <bean class="com.opengamma.financial.aggregation.EquityBetaAggregationFunction">
          <constructor-arg ref="combinedSecuritySource" />
          <constructor-arg ref="sharedHistoricalTimeSeriesSource" />
          <constructor-arg value="false" />
          <constructor-arg value="true" />
        </bean>
        <bean class="com.opengamma.financial.aggregation.CurrentMarketCapAggregationFunction">
          <constructor-arg ref="combinedSecuritySource" />
          <constructor-arg ref="sharedHistoricalTimeSeriesSource" />
          <constructor-arg value="false" />
        </bean>
        <bean class="com.opengamma.financial.aggregation.LiquidityAggregationFunction">
          <constructor-arg ref="combinedSecuritySource" />
          <constructor-arg ref="sharedHistoricalTimeSeriesSource" />
          <constructor-arg value="false" />
        </bean>
        <bean class="com.opengamma.financial.aggregation.LongShortAggregationFunction">
          <constructor-arg ref="combinedSecuritySource" />
          <constructor-arg value="false" />
        </bean>
      </list>
    </property>
  </bean>

  <!-- new Web-interface -->
  <bean id="liveResultsService" class="com.opengamma.web.server.push.grid.PushLiveResultsService">
    <constructor-arg ref="demoViewProcessor" />
    <constructor-arg ref="combinedPositionSource" />
    <constructor-arg ref="combinedSecuritySource" />
    <constructor-arg ref="userFinancialPortfolioMaster" />
    <constructor-arg ref="userFinancialPositionMaster" />
    <constructor-arg ref="userViewDefinitionRepository" />
    <constructor-arg ref="testUser" />
    <constructor-arg ref="fudgeContext" />
    <constructor-arg ref="portfolioAggregationFunctions" />
  </bean>

  <bean id="longPollingConnectionManager" class="com.opengamma.web.server.push.LongPollingConnectionManager"/>

  <bean id="connectionManager" class="com.opengamma.web.server.push.ConnectionManagerImpl">
    <constructor-arg index="0" ref="changeManager"/>
    <constructor-arg index="1" ref="masterChangeManager"/>
    <constructor-arg index="2" ref="liveResultsService"/>
    <constructor-arg index="3" ref="longPollingConnectionManager"/>
  </bean>

  <bean id="viewportReportGeneratorFactor" class="com.opengamma.web.server.push.reports.ReportFactory">
    <constructor-arg>
      <map>
        <entry key="csv">
          <bean class="com.opengamma.web.server.push.reports.CsvReportGenerator"/>
        </entry>
      </map>
    </constructor-arg>
  </bean>

  <bean id="webViewportsRestBean" class="com.opengamma.web.server.push.rest.ViewportsResource">
    <constructor-arg index="0" ref="connectionManager"/>
    <constructor-arg index="1" ref="viewportReportGeneratorFactor"/>
  </bean>

  <bean id="changeManager" class="com.opengamma.core.change.AggregatingChangeManager">
    <constructor-arg>
      <list>
        <ref bean="dbPortfolioMaster"/>
        <ref bean="dbPositionMaster"/>
        <!--TODO what other data are we interested in?-->
      </list>
    </constructor-arg>
  </bean>

  <bean id="masterChangeManager" class="com.opengamma.web.server.push.MasterChangeManager">
    <constructor-arg>
      <map>
        <entry key="POSITION" value-ref="dbPositionMaster"/>
        <entry key="PORTFOLIO" value-ref="dbPortfolioMaster"/>
      </map>
    </constructor-arg>
  </bean>

  <bean id="jsonToViewport" class="com.opengamma.web.server.push.rest.ViewportDefinitionMessageBodyReader" scope="singleton"/>

  <bean id="reportToResponseBody" class="com.opengamma.web.server.push.rest.ReportMessageBodyWriter" scope="singleton"/>

  <!-- old Cometd Web-interface -->
  <bean id="webInterfaceBean" class="com.opengamma.web.server.LiveResultsServiceBean">
    <property name="user" ref="testUser" />
    <property name="viewProcessor" ref="demoViewProcessor" />
    <property name="positionSource" ref="combinedPositionSource" />
    <property name="securitySource" ref="combinedSecuritySource" />
    <property name="userPortfolioMaster" ref="userFinancialPortfolioMaster" />
    <property name="userPositionMaster" ref="userFinancialPositionMaster" />
    <property name="userViewDefinitionRepository" ref="userViewDefinitionRepository" />
    <property name="portfolioAggregators" ref="portfolioAggregationFunctions" />
    <property name="snapshotMaster" ref="dbSnapshotMaster" />
    <property name="executorService">
      <bean class="com.opengamma.util.ExecutorServiceFactoryBean">
        <property name="styleName" value="CACHED" />
      </bean>
    </property>
    <property name="fudgeContext" ref="fudgeContext" />
  </bean>
  <bean class="com.opengamma.web.analytics.WebAnalyticsResource">
    <constructor-arg ref="webInterfaceBean" />
  </bean>

  <!-- MarketDataSnapshot master service -->
  <bean id="testSnapshotMaster" class="com.opengamma.master.marketdatasnapshot.impl.InMemorySnapshotMaster" />
  <bean id="snapshotMasterRestBean" class="com.opengamma.financial.marketdatasnapshot.rest.MarketDataSnapshotMasterService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlyingMap">
      <map>
        <entry key="0" value-ref="dbSnapshotMaster" />
        <entry key="test" value-ref="testSnapshotMaster" />
      </map>
    </property>
  </bean>
  <bean id="snapshotSourceRestBean" class="com.opengamma.financial.marketdatasnapshot.rest.MarketDataSnapshotSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlyingMap">
      <map>
        <entry key="0" value-ref="combinedSnapshotSource" />
        <entry key="shared" value-ref="sharedSnapshotSource" />
        <entry key="user" value-ref="userFinancialSnapshotSource" />
      </map>
    </property>
  </bean>

</beans>
